<?xml version="1.0" encoding="UTF-8"?>
<config:beans
        xmlns:config="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">



    <config:bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
        <config:property name="driverClassName" value="${jdbc.driverclass}" />

        <!-- 基本属性 url、user、password -->
        <config:property name="url" value="${jdbc.connection.url}" />
        <config:property name="username" value="${jdbc.connection.username}" />
        <config:property name="password" value="${jdbc.connection.password}" />

        <!-- 配置初始化大小、最小、最大 -->
        <config:property name="initialSize" value="3" />
        <config:property name="minIdle" value="3" />
        <config:property name="maxActive" value="5" />

        <!-- 配置获取连接等待超时的时间 -->
        <config:property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <config:property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <config:property name="minEvictableIdleTimeMillis" value="300000" />

        <config:property name="validationQuery" value="SELECT 'x'" />
        <config:property name="testWhileIdle" value="true" />
        <config:property name="testOnBorrow" value="false" />
        <config:property name="testOnReturn" value="false" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用）
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> -->

        <!-- 配置监控统计拦截的filters -->
        <config:property name="filters" value="stat" />
    </config:bean>

    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--<property name="dataSource" ref="dataSource" />-->
        <!--<property name="configLocation" value="classpath:ibatis.xml" />-->
    <!--</bean>-->

    <config:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <config:property name="dataSource" ref="dataSource" />
        <config:property name="mapperLocations" value="classpath:com/ambimmort/nisp3/mappers/**/*.xml" />
    </config:bean>

    <!-- 配置事务管理器 -->
    <config:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <config:property name="dataSource" ref="dataSource" />
    </config:bean>



    <config:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <config:constructor-arg index="0" ref="sqlSessionFactory" />
    </config:bean>


    <config:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <config:property name="dataSource" ref="dataSource"/>
    </config:bean>


    <!-- 拦截器方式配置事物 -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
            <tx:method name="modify*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
            <tx:method name="find*" propagation="SUPPORTS" />
            <tx:method name="query" propagation="SUPPORTS" />
            <tx:method name="search*" propagation="SUPPORTS" />
            <!--<tx:method name="*" propagation="SUPPORTS" />-->
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* com.ambimmort.nisp3.service.*.*(..))" />
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
    </aop:config>


    <!-- 配置druid监控spring jdbc -->
    <config:bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
    </config:bean>
    <config:bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
        <config:property name="patterns">
            <config:list>
                <config:value>com.ambimmort.nisp3.service.impl</config:value>
            </config:list>

        </config:property>
    </config:bean>
    <aop:config>
        <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
    </aop:config>

</config:beans>